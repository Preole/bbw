Update Log
----------

=== 0.1.0 ===

==== Repository-Specific ====

- Removed the development branch from the repository; The branch turns 
  out unnecessary due to the simplicity of the project.

- Removed "Do not use" warning. Basic functionality and underlying engine 
  rewrites are complete.
  
- Modified """.gitattributes""" to enforce Unix-style line breaks throughout 
  the repository.

==== Project ====

- Added a selection menu for wiki entry mime type. No more manually typing 
  and guessing available types of wiki entries. There are three official types 
  of wiki entries.

  - Straight HTML """text/html"""
  - BakaBakaMark Wiki text """text/x-bbm"""
  - Plain text """text/plain"""
  
- Added the option to directly import HTML code into the wiki. No more 
  converting them into HTML mime type after importing them as plain text.
```

=== 0.1.1 ===

==== New Features ====

- Added an explicit close button for dismissing side panels.
- Added an automatic name generation for importing individual
  text files as wiki entries. The files' names shall be their
  title.

This change does not affect importing wiki entries from JSON
data sets.

- Re-arranged the editing interface to have the following order:

1. Title
2. Tags
3. Content
4. Mime type

This is to be consistent with the viewing interface, which
displays wiki entry information in that order.

- Fixed an issue where clicking on the indexing button for the
first time forces the screen to scroll to bottom in Firefox.



=== 0.1.2 ===

==== New Features ====

- Added double pipes `||` as a valid delimiter for startup wiki entry 
  titles, in addition to line breaks. (Better horizontal space utilization)
  
- Added a proper UI dashboard for managing wiki entry tags, which have the
  following controls:

  - A lookup table for existing tags.
  - A convenient text field for adding tags.
  - Tag deletion; Click on the tag.
  
  Currently, it cannot prevent adding identical tags, though they will be 
  cleaned up after committing the edit.
  
==== Fixes ====

- Wiki entries should now display the tags in alphabetical order in both 
  viewing and editing mode.

==== Project-Specific ====

- Renamed the template script file `$t.js` to `$TMPL.js`,
  avoiding letter case inconsistency in commits.

- Separated the update log from README into a separate file.



=== 0.1.3 ===

==== Fixes ====

- The tag editing interface should no longer add identical tags to the 
  display.

- Fixed an error on importing; If an index is requested before the import, 
  and then the same index is requested immediately afterwards, the index 
  should now properly display the update.

- Fixed a bug where the indexing panel would persist in the next launch 
  if left unclosed prior to saving. Clicking on buttons in this panel 
  resulted in errors, until the panel is refreshed.


=== 0.1.4 ===

==== Fixes ====

- The drop-down menu for existing tags in editing mode had a 
  behavior change; It will now fill the nearby textbox with 
  the tag, rather than adding the tag directly.

  Internet Explorer should no longer add tags every time the 
  tag selection menu changes from keyboard presses.

  This change is made to better accommodate keyboard navigation 
  under certain browsers, which have different behaviors for 
  menu item changes made by the keyboard.

- Fixed a low-level error that prevented saving and exporting 
  under Internet Explorer 10 or higher.



=== 0.1.5 ===

==== Fixes ====

- Fixed an XSS vulnerability with `</script>` present in the data store
  entered at the application level.

- Back links should now be properly turned orange when the target entry 
  doesn't exist in the data storage.


=== 0.2.0 ===

==== New Features ====

- Navigation History; There's now the "back" and "next" buttons, which 
  enables browsing history traversal similar to a web browser's back and 
  forward buttons.
  
  Additionally, there's now a dedicated refresh button to fetch new changes 
  made to the page since it has been opened.
  
  Now, it should be easier going back to previously visited wiki entries. 
  Digging through indices and search results should no longer be necessary.
  
- Single Browsing Pane; Clicking on internal links or submitting forms 
  within the browsing pane opens up the resulting page in the same pane, 
  instead of opening up a new pane containing the result.
  
  This change is made for similarity and consistency with web browser 
  behaviors in general.

- Tabbed Navigation UI; At most one browsing session (tab) is in the 
  viewing pane at any given time, which can be swapped out for another 
  tab in the side panel.
  
  This feature is added to deal with vertically long viewing pane, 
  which would be stretched endlessly every time an internal link is clicked. 
  The large number of interface widgets and sections has made keyboard, and 
  at times, mouse navigation rather overwhelming.



==== Changed Features ====

- The original vertical layout of BareBonesWiki from versions 0.1.x have 
  been replaced with **Tabbed Navigation UI**, **Single Browsing Pane**, 
  and **Navigation History**.

- The UI has been redesigned to accommodate narrow, portrait screens in 
  addition to desktop widescreen.
  
- The search and indexing interface have been baked into the default 
  home page. They are no longer available as part of the standard menu.

- There's no more dedicated view panel for search & index results. They'll 
  simply be posted to the main viewing pane now.



==== Internal Changes ====

- Improved HTML semantics.
- Streamlined event handling.
- Eliminated more string constant littering.
- Removed unnecessary content in """README.md""".
- Project restructured into traditional MVC pattern with linear dependency 
  between layers.
  
  ; """lib/"""
  : Libraries used in the project, like jQuery, lodash, etc.
  
  ; """models/"""
  : Data storage objects, factory singletons, prototypal classes used 
    within the objects. Currently missing a dedicated abstraction for 
    objects used within the HistoryList class.
  
  ; """collections/DB.js"""
  : The management singleton for manipulating multiple different view 
    models at once. Its current responsibilities are basic CRUD operations 
    and returning data structures from read requests.
    
  ; """router/$plugins.js"""
  : jQuery plugins for facilitating view manipulation and templating.
  
  ; """router/TMPL.js"""
  : Generates HTML templates from data structures. Returns jQuery objects 
    (HTML Fragments) to be appended to the view.
    
  ; """router/CTRL.js"""
  : Maps internal link and form submission requests into Database calls, 
    then returns the appropriate HTML fragment using one of the available
    templates.
    
  ; """views/"""
  : Presentational logic. Intercepts UI events, performs simulated HTTP 
    requests, then posts the resulting HTML onto the screen.
    
  ; """main.js""", """const.js"""
  : Application kickstarter.
  
