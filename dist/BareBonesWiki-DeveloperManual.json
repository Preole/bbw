{
 "NODES": {
  "CSS Class & ID Prefixes": {
   "title": "CSS Class & ID Prefixes",
   "src": "; \"\"\"css-\"\"\"\n: Strictly for styling purposes.\n\n; \"\"\"js-\"\"\"\n: Strictly for application logic.\n\n; \"\"\"js-css-\"\"\"\n: Used by application logic to control styling.\n  (Toggling visibility, red linking)\n\n; \"\"\"bbm-\"\"\"\n: CSS namespace custom classes and identifiers \n  coming out of the wiki text parser.\n\n",
   "tags": [
    "Front-end",
    "Back-end"
   ],
   "mime": "text/x-bbm",
   "created": 1395010882719,
   "edited": 1395011295023
  },
  "Enhancement Update": {
   "title": "Enhancement Update",
   "src": "March 22nd, 2014 Update\n=======================\n\nRegarding the issue with data store, I have decided to forfeit \nusing a separate data store for tags; Tightly coupling keywords \nand tags with wiki entries is only natural, because these tags \nonly have semantic meanings when they appear with these entries. \nI shall still enforce the business constraints required of tags \nand wiki entries.\n\nI have created a \"\"\"WikiNode\"\"\" utility class isolated from the \ndatabase singleton, which has its own data validation scheme. \n\nI have also curated a new Directed Graph class object, which \nwill be responsible as the formal data structure backing up the \ndatabase. The introduction of the data structure should also \nreduce redundancy for generating data structures for indices. \n(Not yet finished)\n\n\nNew Problems Identified\n-----------------------\n\n- Lack of Error Reporting, both on the UI level and the API level\n- Lack of Error detection and constraint enforcing at the API level\n\n",
   "tags": [
    "Uncategorized"
   ],
   "mime": "text/x-bbm",
   "created": 1395525216255,
   "edited": 1395722948663
  },
  "Enhancement Update 2": {
   "title": "Enhancement Update 2",
   "src": "March 23, 2014\n==============\n\nIdentified a few key areas for engine improvement.\n\n1. On initialization, instead of doing a nested loop to \n   find recently edited entries, sort the entries first,\n   then pick the most recent few using a simple loop.\n\n\n\nMarch 24nd, 2014 Update\n=======================\n\nImprovements\n------------\n\n- Consolidated similar, repeated littering string literals\n  and CSS selectors so that it's easier to chase them down \n  for maintenance.\n\n- Created factory modules for creating and managing Wiki entries,\n  configuration objects, and hopefully, edge objects as well.\n\n\n\nI have compiled a list of CSS selectors that are tightly coupled \nwith javascript, and should not be changed at the CSS/HTML level:\n\n; \"\"\".js-css-invis\"\"\"\n: Toggles the visibility state of the HTML element.\n\n; \"\"\".js-wlink\"\"\"\n: Wiki-Links; Only applies to \"\"\"<a>\"\"\" elements. Hyperlinks with \n  this class will exhibit special behaviors instead of the standard \n  hyperlink behavior, depending its container's CSS classes.\n\n; \"\"\".js-content\"\"\"\n: Content area label; Wiki-links under this container will open a \n  new wiki entry based on its URL.\n\n; \"\"\".js-index\"\"\"\n: Indexing area label; Wiki-links under this container will index \n  the database and post the result onto a specialized display.\n\n; \"\"\".js-tags\"\"\"\n: Tagging area label; Wiki-links under this container will index \n  and display all wiki entries that have this tag.\n\n----\n\nMeanwhile, here's a list of javascript events (Triggered via jQuery), \nand their descriptions.\n\n; \"\"\"EVT.INDEX\"\"\"\n: Launches a popup modal box that displays a list of available \n  indexing methods. Clicking on one of these indexing methods \n  result in wiki entries being displayed arranged in a specific \n  order. Occurs on clicking the indexing button.\n\n; \"\"\"EVT.TAG\"\"\"\n: Launches a popup modal box displaying the list of wiki entries \n  under a specific tag. Occurs when a tag hyperlink is clicked.\n\n; \"\"\"EVT.SAVE\"\"\"\n: Serializes this entire application into one single HTML file, \n  where the location is to be specified by the user.\n\n  Alternatively, saves a configuration object into the data store.\n\n; \"\"\"EVT.EXPORT\"\"\"\n: Serializes the database into a JSON file for saving.\n\n; \"\"\"EVT.IMPORT\"\"\"\n: Loads a plain text file into the database for viewing, or loads \n  a JSON file and merge that database into the current one, \n  overwriting any name conflicts.\n\n; \"\"\"EVT.LOAD\"\"\"\n: Used by various static, hidden form elements for populating \n  the interface with data, and showing themselves.\n\n; \"\"\"EVT.CLOSE\"\"\"\n: Closes or destroys the container window, such as an editing \n  form or a modal popup box. This is a generic event.\n\n\n\nThe following events are specific to the content area where \nwiki entries are displayed:\n\n; \"\"\"EVT.CLOSEO\"\"\"\n: Closes all open wiki entries except the one that initiated\n  this event.\n\n; \"\"\"EVT.EDIT\"\"\"\n: Switches an open wiki entry into editing mode.\n\n; \"\"\"EVT.COMMIT\"\"\"\n: Saves the wiki entry being edited into the database (memory).\n\n; \"\"\"EVT.CANCEL\"\"\"\n: Discard changes and switch the wiki entry back to view mode.\n\n; \"\"\"EVT.DELETE\"\"\"\n: Removes the wiki entry from storage.\n\n; \"\"\"EVT.OPEN\"\"\"\n; Opens a wiki entry with a particular title for viewing.\n\n\nNew Problems Identified\n-----------------------\n\n- The popup modal box tag hyperlinks and indexing button does not \n  always appear right underneath the said elements under Firefox 27.\n\n- When importing an external plain text file, the wiki engine always \n  treat the input as a data set regardless of the choices made in the \n  radio buttons.\n\n- There's no way to specify the expected charset when importing a \n  file.\n\n\n\nClosing\n-------\n\nStill pondering how to organize the database code so it's more human-\nreadable. Still wondering where to put the mime type registry, and \nstill massively refactoring my code. Also forgot to finish my sentences.",
   "tags": [
    "Uncategorized"
   ],
   "mime": "text/x-bbm",
   "created": 1395632199923,
   "edited": 1396228477152
  },
  "Enhancement Update 3": {
   "title": "Enhancement Update 3",
   "src": "March 30th, 2014\n================\n\nReadied a bug fix where modal windows are spawning in unexpected\nplaces. That is, when a tag link gets clicked, the modal box \nthat contains all title links related to that tag fails to appear \nunderneath the link.\n\nReadied a bug fix for importing data sets; When the new configuration \nobject is imported, the page title and status fail to be updated, \nunless the wiki is saved and re-opened at a later time.",
   "tags": [
    "Uncategorized"
   ],
   "mime": "text/x-bbm",
   "created": 1396228440559,
   "edited": 1396229603336
  },
  "Build Instruction": {
   "title": "Build Instruction",
   "src": "Basic Build Instructions\n========================\n\n1. Install ?<http://nodejs.org/>-[node.js]. \n\n2. Jump to the project's root directory using command-line and type \n   \"\"\"node build.js\"\"\". If you're on Windows, shift-right click the\n   open white space in the Explorer window and select \"\"\"Open \n   command-prompt\"\"\"\n   \n3. Retrieve the generated HTML file in \"\"\"./dist/\"\"\".\n\n\n\nSlightly more complicated builds\n================================\n\nAssuming you're in the project's root directory in the command line, with \nnode.js installed, install the following node.js modules:\n\n\"\"\"\nnpm install jscombiner\nnpm install fuse\n\"\"\"\n\nThe former is a javascript file concatenator, while the latter is a HTML, \nCSS, and Javascript file injector.\n\nIf you'll be using the wiki in older web browsers, Navigate to the source code \ndirectory and switch jQuery library versions located in \"\"\"./src/lib/\"\"\". \n**Note**: this operation does not enable Internet Explorer 8-9 to commit \npersistent changes to the wiki.\n\n\"\"\"\ncd src/lib/\ncp jQuery1.x.min.js jQuery.min.js\n\"\"\"\n\nRetrieve the generated HTML file in \"\"\"./dist/\"\"\"\n\n\n\n\n\nHard Dependencies\n=================\n\nThey're already included in the source code, but just in case updates come \nout:\n\n; jQuery \n\n  : Download the minified library from ?<http://jquery.com/download/>\n     -[the official website], then put it into the source folder. Download \n     the 1.x branch if planning to use the wiki with older web browsers.\n     (Not Internet Explorer, unfortunately)\n\n; lodash\n\n  : Retrieve the minified compatibility build of lodash from \n    ?<http://lodash.com/>, by John-David Dalton, and drop it off at\n    \"\"\"./src/lib/\"\"\".\n    \n; bbm (BakaBakaMark; The markup syntax used in the wiki)\n\n  : ?<https://github.com/Preole/bbm>\n\n    Simply drag, drop, and replace the old library with the new one.\n\n\n\n\nlodash Custom Build\n===================\n\nIf memory consumption and saving a few bytes matter, we can build a custom \nversion of lodash using **node.js**.\n\n1. Install node.js\n2. Install npm (Which comes along with node.js)\n3. \"\"\"\n   npm install lodash-cli -g\n   \"\"\"\n\n4. \"\"\"\n   lodash compat category=collections,objects exports=global include=difference,uniq,union,identity\n   \"\"\"\n   \n   Switch out \"\"\"compat\"\"\" with \"\"\"modern\"\"\" if you'll always be using\n   modern web browsers.\n   \n5. Drag & drop the minified library into \"\"\"./src/lib/\"\"\".\n\n\n\njQuery Custom Build\n===================\n\nLike the lodash custom build, follow these instructions if you're looking \nto save a few extra bytes. This build instruction assumes that the following \ncommands are available in the command line shell:\n\n- node (?<node.js>)\n- npm (Comes along with node.js)\n- git (?<git>)\n- grunt-cli (\"\"\"npm install grunt-cli -g\"\"\")\n\n:{node.js}: http://nodejs.org/\n:{git}: http://www.vogella.com/tutorials/Git/article.html#installation\n\n\nFrom the command line in the github directory, clone jQuery's repository\nand build its dependencies using the following commands:\n\n\"\"\"\ngit clone git://github.com/jquery/jquery.git\ncd jquery\nnpm run build\n\"\"\"\n\n\n\nAfter building, run one of the following scripts depending on how modern \nyour web browsers will be. For older Gecko and Webkit-based, use the 1.x \nbranch:\n\n\"\"\"\ngit checkout 1.11.0\ngrunt custom:-deferred,-ajax,-effects,-core/ready,-serialize,-event-alias,-callbacks,-queue,-forms,-deprecated,-exports/amd,-css\n\"\"\"\n\n\n\nAnd if you'll always use the latest browsers, use the 2.x branch.\n\n\"\"\"\ngit checkout 2.1.0\ngrunt custom:-deferred,-ajax,-effects,-core/ready,-serialize,-event-alias,-callbacks,-queue,-forms,-deprecated,-exports/amd,-css,-sizzle\n\"\"\"\n\nDrop the minified jquery from \"\"\"$(jQueryRoot)/dist/jquery.min.js\"\"\" \nto the wiki's source directory: \"\"\"$(bbwRoot)/src/lib/jquery.min.js\"\"\"\n\n",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1396396283154,
   "edited": 1396396284154
  },
  "JSON Datastore": {
   "title": "JSON Datastore",
   "src": "BareBonesWiki JSON\n==================\n\nThis document is a short, detailed explanation about BareBonesWiki's back end \ndata structure serialized as JSON. The document provides a sample JSON and \ndescribes each data field, as well as all possibilities formations of the \ndatabase.\n\n\nSample JSON Data\n----------------\n\n\"\"\"\n{\n /*\n A set of unique wiki entries organized by their names. This lists all \n entries that currently reside in the wiki.\n */\n \"NODES\": {\n\n \n \n  /*\n  An example wiki entry, which is a String value connected to a wiki node \n  object. This string value must have no leading or trailing spaces, and \n  must not contain any control characters.\n  \n  Consecutive space characters of differing flavors should be normalized \n  to a single ASCII (0020) space character. No control characters (such \n  as line feed) are allowed in the key field.\n  */\n  \"BareBonesWiki\": { \n  \n  \n  \n   /*\n   String; The string value must match the containing wiki node's key value, \n   case sensitive.\n   */\n   \"title\": \"BareBonesWiki\", \n   \n   \n   \n   /*\n   Number (Integer); Date UTC in milliseconds. This is the date this\n   entry was last edited.\n   */\n   \"edited\": 1391063754000,\n   \n   \n   \n   /*\n   Number (Integer); Date UTC in milliseconds. The date this entry\n   was created.\n   */\n   \"created\": 1390971816000,\n   \n   \n   \n   /*\n   An Array of unique String values. Lexicographic order is not required, \n   but it should contain at least one non-empty string value. In the case\n   of an empty tag array, a default tag name must be supplied.\n   (e.g: \"Uncategorized\")\n   */\n   \"tags\": [\n    \"Built-in\"\n   ],\n   \n   \n   \n   //String; The wiki entry's source code in plain text.\n   \"src\": \"SomeText\",\n   \n   \n   /*\n   String; The wiki entry's MIME type, which determines the way the wiki\n   entry will be rendered. Currently, there are three significant mime\n   types the wiki will respond to:\n   \n   ; \"text/x-bbm\"\n   : Default mime type; Parses the content as wiki text.\n   \n   ; \"text/html\"\n   : Straight embedded HTML, in case wiki text is not powerful enough.\n   \n   ; Anything else\n   : Plain text; The source code of the wiki entry is simply stuffed \n     into a pre-formatted text block.\n   */\n   \"mime\": \"\"\n  }\n },\n \n \n \n /*\n Denotes directed edges (Arrows) from one wiki entry onto another wiki \n entry, referenced by their names (title). These edges can only be extracted \n after compiling an entry's source code. As such, it's possible for the \n source text to be out of sync with the model represented here.\n \n Contains a unique set of objects, where each objects contains a unique \n set of String values (Target entry).\n \n The key values under \"EDGES\" must also exist under \"NODES\".\n */\n \"EDGES\": {\n \n  /*\n  Example source edge.\n  */\n  \"BareBonesWiki\" : {\n  \n   /*\n   Number; Any positive integer; Which denotes there's at least one link \n   from the current node to the destination.\n   \n   The destination node is denoted by the key value, which does not have\n   to exist in the set \"NODES\".\n   */\n   \n   \"DoesNotExist\" : 1,\n   \"AnotherTitle\" : 1\n  },\n },\n \n \n \n /*\n Configuration object used by BareBonesWiki engine.\n */\n \"CONFIG\": {\n \n  /*\n  The Wiki's Title. Must not be an empty String.\n  */\n  \"title\": \"BareBonesWiki\",\n  \n  /*\n  A unique array of String values, denoting the list of entries to display \n  on startup. Names listed later should be displayed first.\n  */\n  \"startup\": [\n   \"BareBonesWiki\"\n  ],\n  \n  \n  \n  /*\n  Boolean; Displays warning on deleting entries.\n  */\n  \"cfmDel\": true, \n  \n  \n  \n  /*\n  Boolean; Displays warning on closing the wiki (Navigating away)\n  */\n  \"cfmNav\": true,\n  \n  \n  \n  /*\n  Boolean; Letter case sensitivity for full-text search.\n  */\n  \"searchCase\": false\n }\n}\n\"\"\"",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1396396335680,
   "edited": 1396396336680
  },
  "Enhancement Update 5": {
   "title": "Enhancement Update 5",
   "src": "== Update May 28th, 2014 ==\n\n- Installed a rudimentary error console at the application level.\n  This feature is part of the project milestone.\n\n- Fixed a keyword search bug when there are no characters in the \n  text field. Now, the search box will close off the indexing side \n  bar if the input is either empty, or only contains spaces.\n\n- If no wiki entry titles are specified, the application should \n  now display the most recently edited entries from top to bottom, \n  rather than in reverse order.\n\n- Clicking on internal links or buttons for the first time in the \n  application should no longer cause the window to scroll to the \n  bottom.",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1401327581059,
   "edited": 1401327685879
  },
  "Enhancement Update 4": {
   "title": "Enhancement Update 4",
   "src": "Bug Fix, Missing Features\n-------------------------\n\n- **{++Update April 29th, 2014++}**\n\n  - Added support for exact-phrase search using double quotes.\n    Example: \"\"\"\\\"This Exact Sentence\\\"\"\"\".\n  - Added rudimentary error reporting if the underlying wiki \n    engine encounters an error.\n\n- Fixed the bug regarding erroneous popup window positions.\n- Fixed the bug where page titles and status fail to update\n  after importing from an external dataset.\n- Fixed an importing bug where it can only import JSON data;\n  Now it can accept other forms of textual data as well.\n- Added character set specification support when importing \n  from external files. The wiki can now import textual data \n  that are not encoded in UTF-8 (e.g: GB2302 Simplified Chinese, \n  Russian, SHIFT-JIS Japanese.)\n\n\n\nProject Structures\n------------------\n\n- Less string literal littering; Currently considering\n  whether to enforce centralized string constant coding policy.\n  Specifically, only a very specific few modules are allowed \n  to declare string constants.\n- Established formal object factories for Wiki entries, \n  configuration objects, and a formal class for edge sets.\n  Rudimentary constraint enforcing for these objects have \n  been established.\n\n\n\nNew Milestone\n-------------\n\n- Create a rudimentary error reporting interface for when the \n  javascript engine crash. (Accomplished)\n- Keep the HTML file under 200KB uncompressed.\n",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1396394112264,
   "edited": 1403203701206
  },
  "Enhancement Update 6": {
   "title": "Enhancement Update 6",
   "src": "Repository-Specific\n-------------------\n\n- Removed the development branch from the repository; The branch turns \n  out unnecessary due to the simplicity of the project.\n\n- Removed \"Do not use\" warning. Basic functionality and underlying engine \n  rewrites are complete.\n  \n- Modified \"\"\".gitattributes\"\"\" to enforce Unix-style line breaks throughout \n  the repository.\n\nProject\n-------\n\n- Added a selection menu for wiki entry mime type. No more manually typing \n  and guessing available types of wiki entries. There are three official types \n  of wiki entries.\n\n  - Straight HTML \"\"\"text/html\"\"\"\n  - BakaBakaMark Wiki text \"\"\"text/x-bbm\"\"\"\n  - Plain text \"\"\"text/plain\"\"\"\n  \n- Added the option to directly import HTML code into the wiki. No more \n  converting them into HTML mime type after importing them as plain text.",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1403203760729,
   "edited": 1403203761729
  },
  "Possible Front-end Enhancement": {
   "title": "Possible Front-end Enhancement",
   "src": "Editing Interface\n=================\n\nThe **mime type** field of the editing interface should be a \ndrop-down box offering a slew of choices with a default \npre-selected. A simple text field may be too primitive an \ninterface. {++Done++}\n\nThe **tags** field of the editing interface can use the same \ntreatment; Either selecting a pre-existing tag or enter a \nnew tag string manually.\n\nThe search & indexing result panel should have an explicit \nclose button, rather than relying on an empty search query \nto close it. {++Done++}\n\n\n\nImporting Interface\n===================\n\nThe current interface for importing is limited to reading \nUTF-8 encoded text. It should be extended to accept other \ncharacter sets in addition to UTF-8. {++Done++}\n\nNext, the importing interface now supports the following \nfile types:\n\n- Plain text (No interpretation)\n- HTML Snippets (Raw HTML)\n- BareBonesWiki wiki text (Also plain text)\n- JSON (A data set extracted from another BareBonesWiki)\n\nFinally, aside from importing as a data set, importing \nwiki entries as individual text files now have sensible\nname generation, as well as a renaming scheme in case \nof name conflict.\n\n",
   "mime": "text/x-bbm",
   "tags": [
    "Front-end"
   ],
   "created": 1395000557212,
   "edited": 1404196874971
  },
  "Possible Back-end Enhancement": {
   "title": "Possible Back-end Enhancement",
   "src": "Database (Solved)\n=================\n\nConsider separating tags from wiki entries, rather than \nintegrated as part of wiki entry objects. Tag objects should \nhave its own module for enforcing business constraints, which \nare essential for effective tagging (partitioning) of wiki \nentries based on categories. Specifically, \n\n- There can only be one unique tag per application instance,\n  determined by the tag name.\n- Each tag can refer to at most one unique wiki entry \n  identified by their title text.\n- Similarly, each wiki entry can be tagged at most once by \n  any given tag object.\n- Control characters **must be stripped** from tag names.\n- All consecutive white space characters in tag names **must**\n  be collapsed into a single ASCII white space. However, single\n  non-ASCII space characters are permitted to remain as they \n  are.\n\nWiki entries are not supposed to know which categories they \nbelong to; They should only need to know when they're last \nedited, the date they're created, its title and its source code.\n\n**Wiki entry objects** should also abide to the following rules:\n\n- One unique wiki entry title per application.\n- No control characters allowed in **Mime Type** and **Title**\n  fields.\n- In the same field, process white space in the same way as the \n  tag names do to its white space characters.\n\n{++\nThe end result is a dedicated graph data structure that can \npossibly be re-used elsewhere.\n++}\n\n\n\nView Controller (Solved)\n========================\n\nThe code base currently has severe problems with string literals \nrepeatedly used in different areas. The worst offending use case \nare **jQuery CSS selectors**, which often have little to no variation \nfrom one another, but are used as string literals because of the \nCSS selector syntax:\n\n\"\"\"\n$(\"#someConstantModule\").on(\"someEvent\", \".js-wlink\", ...)\n\nfunction doSomething(evt)\n{\n if ($(evt.target).hasClass(\"js-wlink\"))\n {\n  //Do something fancy.\n }\n}\n\"\"\"\n\nHere, the class \"js-wlink\" refers to \"javascript wiki links\", \nwhich opens a wiki entry when they're clicked. Due to the nature \nof CSS selectors, the string value has to be repeated every time \nthere's a different relationship regarding the link, such as \nwhether it's a descendant of a particular kind of \"\"\"div\"\"\". \nInstances of such string constants lead to difficult maintenance.\n\n{++\nRe-arranged the string constants such that each string constant \nis only defined once in the entire application, and they're not \nused outside the files they belong to, except through an explicit \ninterface from each module.\n++}\n\n{++\nOrganized view controllers as single files, with dependencies \nspecified by comments such as \"\"\"/*import something.js*/\"\"\". \n++}\n\nAPI & Architecture Design Flaws (Solved)\n========================================\n\n1. In order to find forward links within a wiki entry, the engine \n   must perform the following procedure every time a wiki entry is \n   saved.\n\n   1. Parse the text into HTML strings.\n   2. Build the HTML DOM.\n   3. Query the DOM for a list of links.\n\n   The third step in the parsing process is critical for indexing \n   orphaned entries and their back links, which are very convenient \n   features to end-users. The other two steps are basic plain text \n   - HTML transformation. None of these steps can be combined or \n   simplified at the current state of affairs.\n\n2. Rendering a wiki entry requires a database query to determine \n   whether to display links in a different way. (Red linking)\n\n3. The rendering engine should not have to generate the same data \n   structure as ones used within the database. (Retrieving \n   edges from HTML DOM)\n\n{++\nIsolated the linking steps by storing identifiers inside DOM \nelements; Then, linking only involves retrieving this identifier, \nand make an inexpensive existence query against the database.\n++}",
   "mime": "text/x-bbm",
   "tags": [
    "Back-end"
   ],
   "created": 1395004854914,
   "edited": 1404197267924
  },
  "Enhancement Update 7": {
   "title": "Enhancement Update 7",
   "src": "New Features\n============\n\n- Added an explicit close button for dismissing side panels.\n- Added an automatic name generation for importing individual\n  text files as wiki entries. The files' names shall be their\n  title.\n\n  This change does not affect importing wiki entries from JSON \n  data sets.\n\n- Re-arranged the editing interface to have the following order:\n\n  1. Title\n  2. Tags\n  3. Content\n  4. Mime type\n\n  This is to be consistent with the viewing interface, which \n  displays wiki entry information in that order.\n\n- Fixed an issue where clicking on the indexing button for the \n  first time forces the screen to scroll to bottom in Firefox.\n\n",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1404196730179,
   "edited": 1404198799186
  },
  "Enhancement Update 8": {
   "title": "Enhancement Update 8",
   "src": "New Features\n============\n\n- Added double pipes `||` as a valid delimiter for startup wiki entry \n  titles, in addition to line breaks. (Better horizontal space utilization)\n  \n- Added a proper UI dashboard for managing wiki entry tags, which have the\n  following controls:\n\n  - A lookup table for existing tags.\n  - A convenient text field for adding tags.\n  - Tag deletion; Click on the tag.\n\n  Currently, it cannot handle duplicate tag detection, resulting in \n  duplicates that are cleaned up after commits.\n\nFixes \n=====\n\n- Wiki entries should now display the tags in alphabetical order in both \n  viewing and editing mode.\n\nProject-Specific\n================\n\n- Renamed the template script file `$t.js` to `$TMPL.js`,\n  avoiding letter case inconsistency in commits.\n\n- Separated the update log from README into a separate file.",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1405040291578,
   "edited": 1405200597787
  },
  "EntryPoint": {
   "title": "EntryPoint",
   "src": "The back-end of BareBonesWiki has been fixed by Update 4; It should \nno longer be a pain to push updates and implement new features at this \npoint. Most of the milestones have been met by Update 7, except for a \nmore elaborate tag interface.\n\nMilestones\n----------\n\n- #<Possible Back-end Enhancement>\n- #<Possible Front-end Enhancement>\n\n\n\nUpdate Log\n----------\n\n- #<Enhancement Update 9>\n- #<Enhancement Update 8>\n- #<Enhancement Update 7>\n- #<Enhancement Update 6>\n- #<Enhancement Update 5>\n- #<Enhancement Update 4>\n- #<Enhancement Update 3>\n- #<Enhancement Update 2>\n- #<Enhancement Update>\n\n\n\nReferences\n----------\n\n- #<JSON Datastore>\n- #<Build Instruction>",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1394841548715,
   "edited": 1405200615571
  },
  "Enhancement Update 9": {
   "title": "Enhancement Update 9",
   "src": "Fixes\n=====\n\n- The tag editing interface should no longer add identical tags to the \n  display.\n\n- Fixed an error on importing; If an index is requested before the import, \n  and then the same index is requested immediately afterwards, the index \n  should now properly display the update.\n\n- Fixed a bug where the indexing panel would persist in the next launch \n  if left unclosed prior to saving, where the buttons in that panel raised\n  errors when clicked.\n",
   "mime": "text/x-bbm",
   "tags": [
    "Uncategorized"
   ],
   "created": 1405200728993,
   "edited": 1405200729993
  }
 },
 "EDGES": {
  "EntryPoint": {
   "Possible Back-end Enhancement": null,
   "Possible Front-end Enhancement": null,
   "Enhancement Update 9": null,
   "Enhancement Update 8": null,
   "Enhancement Update 7": null,
   "Enhancement Update 6": null,
   "Enhancement Update 5": null,
   "Enhancement Update 4": null,
   "Enhancement Update 3": null,
   "Enhancement Update 2": null,
   "Enhancement Update": null,
   "JSON Datastore": null,
   "Build Instruction": null
  }
 },
 "CONFIG": {
  "title": "BareBonesWiki-DeveloperManual",
  "startup": [
   "EntryPoint"
  ],
  "cfmDel": false,
  "cfmNav": false,
  "searchCase": false
 }
}